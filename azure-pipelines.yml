variables: { DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 'true', DOTNET_CLI_TELEMETRY_OPTOUT: 'true' }

stages:
- stage: Build
  jobs:
  - job: Build
    strategy:
      matrix:
        'Windows':
          VM_IMAGE: 'windows-2019'
        'Linux':
          VM_IMAGE: 'Ubuntu 16.04'
        'macOS':
          VM_IMAGE: 'macOS-latest'
    pool:
      vmImage: $(VM_IMAGE)
    steps:
    - template: build/stages/build.yml

- stage: Docker
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: Generator
    displayName: 'Generate Docker jobs'
    pool:
      vmImage: windows-2019
    steps:
    - pwsh: ./src/Docker/docker.ps1 -os windows -variant runtime
      name: matrix_Windows
    - pwsh: ./src/Docker/docker.ps1 -os linux -variant runtime
      name: matrix_Linux
  
  - template: build/stages/docker.yml
    parameters:
      name: Linux
      vmImage: 'Ubuntu 16.04'
  - template: build/stages/docker.yml
    parameters:
      name: Windows
      vmImage: 'windows-2019'

- stage: Publish
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: Publish
    pool:
      vmImage: windows-2019
    steps:
    - template: build/stages/publish.yml